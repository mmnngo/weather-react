{"version":3,"sources":["FormattedDate.js","WeatherTemperature.js","WeatherInfo.js","Weather.js","App.js","reportWebVitals.js","index.js"],"names":["FormattedDate","props","console","log","date","day","getDay","month","getMonth","getDate","year","getFullYear","hours","getHours","concat","minutes","getMinutes","react_default","a","createElement","WeatherTemperature","_useState","useState","_useState2","Object","slicedToArray","unit","setUnit","className","Math","round","celsius","href","onClick","event","preventDefault","fahrenheit","WeatherInfo","id","data","city","temperature","description","maxTemp","minTemp","humidity","wind","src","iconUrl","alt","Weather","ready","weatherData","setWeatherData","_useState3","defaultCity","_useState4","setCity","handleResponse","response","Date","dt","main","temp","temp_max","temp_min","weather","name","speed","icon","search","apiUrl","axios","get","then","onSubmit","type","autoFocus","autoComplete","placeholder","onChange","target","value","App","rel","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.25ea45ea.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function FormattedDate(props) {\r\n  console.log(props.date);\r\n  let days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  let day = days[props.date.getDay()];\r\n  let months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  let month = months[props.date.getMonth()];\r\n  let date = props.date.getDate();\r\n  let year = props.date.getFullYear();\r\n  let hours = props.date.getHours();\r\n  if (hours < 10) {\r\n    hours = `0${hours}`;\r\n  }\r\n  let minutes = props.date.getMinutes();\r\n\r\n  if (minutes < 10) {\r\n    minutes = `0${minutes}`;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {day}, {month} {date}, {year} {hours}:{minutes}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nexport default function WeatherTemperature(props) {\r\n  const [unit, setUnit] = useState(\"celsius\");\r\n  function showFahrenheit(event) {\r\n    event.preventDefault();\r\n    setUnit(\"fahrenheit\");\r\n  }\r\n  function showCelsius(event) {\r\n    event.preventDefault();\r\n    setUnit(\"celsius\");\r\n  }\r\n  if (unit === \"celsius\") {\r\n    return (\r\n      <div className=\"WeatherTemperature\">\r\n        <span className=\"temperature\">{Math.round(props.celsius)}</span>\r\n        <span className=\"unit\">\r\n          °C |{\" \"}\r\n          <a href=\"/\" onClick={showFahrenheit}>\r\n            °F\r\n          </a>\r\n        </span>\r\n      </div>\r\n    );\r\n  } else {\r\n    let fahrenheit = (props.celsius * 9) / 5 + 32;\r\n    return (\r\n      <div className=\"WeatherTemperature\">\r\n        <span className=\"temperature\">{Math.round(fahrenheit)}</span>\r\n        <span className=\"unit\">\r\n          <a href=\"/\" onClick={showCelsius}>\r\n            °C\r\n          </a>{\" \"}\r\n          | °F\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport FormattedDate from \"./FormattedDate\";\r\nimport WeatherTemperature from \"./WeatherTemperature\";\r\nimport \"./App.css\";\r\n\r\nexport default function WeatherInfo(props) {\r\n  return (\r\n    <div className=\"WeatherInfo\">\r\n      <div className=\"current-date\" id=\"date\">\r\n        <FormattedDate date={props.data.date} />\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-8\">\r\n          <h1>{props.data.city}</h1>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <WeatherTemperature celsius={props.data.temperature} />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-8\">\r\n          <ul className=\"weather-data\">\r\n            <li className=\"text-capitalize\">{props.data.description}</li>\r\n            <li className=\"current-max-min\">\r\n              {\" \"}\r\n              <span className=\"maxTemp\">\r\n                {Math.round(props.data.maxTemp)}°C /{\" \"}\r\n              </span>\r\n              <span className=\"minTemp\">\r\n                {Math.round(props.data.minTemp)}°C{\" \"}\r\n              </span>\r\n            </li>\r\n            <li>Humidity: {props.data.humidity}%</li>\r\n            <li>Wind: {Math.round(props.data.wind)} km/hr</li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <img\r\n            src={props.data.iconUrl}\r\n            alt={props.data.description}\r\n            className=\"icon\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport WeatherInfo from \"./WeatherInfo\";\r\nimport \"./App.css\";\r\n\r\nexport default function Weather(props) {\r\n  const [weatherData, setWeatherData] = useState({ ready: false });\r\n  const [city, setCity] = useState(props.defaultCity);\r\n  function handleResponse(response) {\r\n    console.log(response.data);\r\n    setWeatherData({\r\n      ready: true,\r\n      date: new Date(response.data.dt * 1000),\r\n      temperature: response.data.main.temp,\r\n      maxTemp: response.data.main.temp_max,\r\n      minTemp: response.data.main.temp_min,\r\n      description: response.data.weather[0].description,\r\n      city: response.data.name,\r\n      humidity: response.data.main.humidity,\r\n      wind: response.data.wind.speed,\r\n\r\n      iconUrl: `http://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`,\r\n    });\r\n  }\r\n  function search() {\r\n    const apiKey = \"65b5662e22ff1bb3952c072792011a99\";\r\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\r\n    axios.get(apiUrl).then(handleResponse);\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    search();\r\n  }\r\n  function handleCityChange(event) {\r\n    setCity(event.target.value);\r\n  }\r\n\r\n  if (weatherData.ready) {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"Weather\">\r\n          <form onSubmit={handleSubmit} id=\"search-form\">\r\n            <div className=\"row\">\r\n              <div className=\"col-8\">\r\n                <input\r\n                  type=\"search\"\r\n                  autoFocus=\"on\"\r\n                  autoComplete=\"off\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter city here\"\r\n                  onChange={handleCityChange}\r\n                />\r\n              </div>\r\n              <div className=\"col-4\">\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Search\"\r\n                  className=\"form-control btn btn-primary w-100\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <WeatherInfo data={weatherData} />\r\n      </div>\r\n    );\r\n  } else {\r\n    search();\r\n    return \"Loading...\";\r\n  }\r\n}\r\n","import React from \"react\";\nimport Weather from \"./Weather\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Weather defaultCity=\"New York\" />\n        <p className=\"contact-me\">\n          This page was built by May Ngo and is open-sourced on{\" \"}\n          <a\n            href=\"https://github.com/mmnngo/weather-react\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            GitHub\n          </a>{\" \"}\n          and hosted on{\" \"}\n          <a\n            href=\"https://chic-babka-35d9a7.netlify.app\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Netlify\n          </a>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}